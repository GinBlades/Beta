@using Microsoft.AspNetCore.Identity
@model Beta.Models.ViewModels.LoginViewModel
@inject SignInManager<Beta.Models.ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Log in";
}

<h2>@ViewData["Title"].</h2>
<form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
    <h4>Use a local account to log in.</h4>
    <hr />
    <div asp-validation-summary="All"></div>
    <label asp-for="Email"></label>
    <input asp-for="Email" />
    <span asp-validation-for="Email"></span>
    <label asp-for="Password"></label>
    <input asp-for="Password" />
    <span asp-validation-for="Password"></span>
    <label asp-for="RememberMe">
        <input asp-for="RememberMe" />
        @Html.DisplayNameFor(m => m.RememberMe)
    </label>
    <button type="submit">Log in</button>
    <p>
        <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">Register as a new user?</a>
    </p>
    <p>
        <a asp-action="ForgotPassword">Forgot your password?</a>
    </p>
</form>
<h4>Use another service to log in.</h4>
<hr />
@{
    var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
    if (loginProviders.Count == 0) {
        <p>
            There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
            for details on setting up this ASP.NET application to support logging in via external services.
        </p>
    } else {
        <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
            <p>
                @foreach (var provider in loginProviders) {
                    <button type="submit" class="btn btn-default" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.AuthenticationScheme</button>
                }
            </p>
        </form>
    }
}